{"version":3,"sources":["webpack:///src/app/point/brick.ts","webpack:///src/app/utils/betweenTwoNums.ts","webpack:///src/app/point/point.ts","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/gameBoard/examInput.ts","webpack:///src/app/app.module.ts","webpack:///src/app/utils/randInt.ts","webpack:///src/app/gameBoard/gameBoard.ts","webpack:///src/app/point/ball.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["Brick","x","y","isBetween","testedNum","lowerIncl","upperIncl","Point","_x","_y","newX","newY","other","getX","getY","environment","production","AppComponent","title","gameBoard","getGameBoardInstance","shift","initialBall","getBall","shouldBallBeStopped","gameStarted","pos","getContent","axis","getNRows","getNCols","collisionOnAxis","option","someBall","getPos","setX","setY","curBall","newBall","getBallAtWithItsXYRandom","equalPosition","setObjAtBoard","bRow","bCol","add","changeShiftIfCollision","collisionOnAnyAxis","initializeBoard","intervalId","setInterval","moveBallByOneField","stopTheBall","clearInterval","initializeGameBoard","changeShift","setStartingBallAtRandomPosition","setBallIntoMotion","selector","templateUrl","styleUrls","board","AppModule","declarations","imports","providers","bootstrap","randInt","min","max","result","i","arguments","Error","length","Math","ceil","floor","random","GameBoard","_gameBoard","_ball","r","row","c","push","obj","col","singelton","instance","init","getInstance","Boolean","Ball","routes","AppRoutingModule","forRoot","exports","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import Point from \"./point\";\n\nclass Brick extends Point {\n    public constructor(x: number, y: number) {\n        super(x, y);\n    }\n}\n\nexport default Brick;\n","/**\n * tests is number is between other two numbers\n */\nfunction isBetween(testedNum: number,\n    lowerIncl: number, upperIncl: number): boolean {\n    return (testedNum >= lowerIncl) && (testedNum <= upperIncl);\n}\n\nexport default isBetween;\n","class Point {\n    private _x: number;\n    private _y: number;\n\n    public constructor(x: number, y: number) {\n        this._x = x;\n        this._y = y;\n    }\n\n    public getX(): number {\n        return this._x;\n    }\n\n    public setX(newX: number): void {\n        this._x = newX;\n    }\n\n    public getY(): number {\n        return this._y;\n    }\n\n    public setY(newY: number): void {\n        this._y = newY;\n    }\n\n    public getPos(): number[] {\n        return [this._x, this._y];\n    }\n\n    public equalPosition(other: Point): boolean {\n        return this._x === other._x && this._y === other._y;\n    }\n\n    add(other: Point): Point {\n        let newX: number = this.getX() + other.getX();\n        let newY: number = this.getY() + other.getY();\n        return new Point(newX, newY);\n    }\n}\n\nexport default Point;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n// GameBoard imported only for better autocompletion\n// consider removing it after everything is done;\nimport { singelton, GameBoard } from './gameBoard/gameBoard';\nimport isBetween from './utils/betweenTwoNums';\nimport Point from \"./point/point\";\nimport Ball from \"./point/ball\";\nimport Brick from \"./point/brick\";\nimport randInt from \"./utils/randInt\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    public title: string = 'bouncing-ball';\n    public gameBoard: GameBoard = singelton.getGameBoardInstance();\n    public shift: Point = new Point(1, 1);\n    public initialBall: Ball = this.gameBoard.getBall();\n    public intervalId: any;\n    public shouldBallBeStopped: boolean = false;\n    public gameStarted: boolean = false;\n\n    public getClassForField(pos: number[]): string {\n        if (this.gameBoard.getContent(pos) instanceof Brick) {\n            return \"boarder\";\n        } else if (this.gameBoard.getContent(pos) instanceof Ball) {\n            return \"ball\";\n        } else {\n            return \"empty\";\n        }\n    }\n\n    private collisionOnAxis(pos: number[], axis: 'x' | 'y'): boolean {\n        if (axis === 'x') {\n            return !isBetween(pos[0], 1, this.gameBoard.getNRows() - 2);\n        } else {\n            return !isBetween(pos[1], 1, this.gameBoard.getNCols() - 2);\n        }\n    }\n\n    private collisionOnAnyAxis(pos: number[]): boolean {\n        return this.collisionOnAxis(pos, 'x') || this.collisionOnAxis(pos, 'y');\n    }\n\n    public changeShift(option: number): void {\n        switch (option) {\n            case 1:\n                this.shift = new Point(-1, -1);\n                break;\n            case 2:\n                this.shift = new Point(-1, 1);\n                break;\n            case 3:\n                this.shift = new Point(1, -1);\n                break;\n            default:\n                this.shift = new Point(1, 1);\n                break;\n        }\n    }\n\n    /**\n     * detects collisions of someBall position with the walls of gameBoard\n     * changes this.shift X and/or Y coordinate (negates it)\n     */\n    private changeShiftIfCollision(someBall: Ball): void {\n        if (this.collisionOnAxis(someBall.getPos(), 'x')) {\n            this.shift.setX(this.shift.getX() * -1);\n        }\n        if (this.collisionOnAxis(someBall.getPos(), 'y')) {\n            this.shift.setY(this.shift.getY() * -1);\n        }\n    }\n\n    private getBallAtWithItsXYRandom(): Ball {\n        let newX: number = randInt(1, this.gameBoard.getNRows() - 1);\n        let newY: number = randInt(1, this.gameBoard.getNCols() - 1);\n        return new Ball(newX, newY);\n    }\n\n    public setStartingBallAtRandomPosition(): void {\n        let curBall: Ball = this.gameBoard.getBall();\n        let newBall: Ball;\n        do {\n            newBall = this.getBallAtWithItsXYRandom()\n        } while (curBall.equalPosition(newBall))\n        this.gameBoard.setObjAtBoard(new Point(curBall.getX(), curBall.getY()));\n        this.gameBoard.setObjAtBoard(newBall);\n        this.initialBall = newBall;\n    }\n\n    private moveBallByOneField(): void {\n        let curBall: Ball = this.gameBoard.getBall();\n        let [bRow, bCol] = curBall.getPos();\n        let newBall: Ball; // where ball will be in the next move\n\n        do {\n            newBall = curBall.add(this.shift);\n            this.changeShiftIfCollision(newBall);\n        } while (this.collisionOnAnyAxis(newBall.getPos()))\n\n        this.gameBoard.setObjAtBoard(new Point(bRow, bCol));\n        this.gameBoard.setObjAtBoard(newBall);\n\n        this.shouldBallBeStopped = newBall.equalPosition(this.initialBall);\n    }\n\n    public initializeGameBoard(): void {\n        this.gameBoard.initializeBoard();\n    }\n\n    /**\n     * sets ball into motion\n     * sets this.internalId = to interval id from setInterval\n     * that it uses internally\n     */\n    public setBallIntoMotion(): void {\n        let intervalId = setInterval(() => {\n            this.gameStarted = true;\n            this.moveBallByOneField();\n            if (this.shouldBallBeStopped) {\n                this.stopTheBall();\n            }\n        }, 200);\n        this.intervalId = intervalId;\n    }\n\n    public stopTheBall(): void {\n        clearInterval(this.intervalId);\n    }\n\n    ngOnInit() {\n        this.initializeGameBoard();\n    }\n\n\n}\n","<div>\n  <table>\n    <tr>\n      <td>\n        <div class=\"gameboard\">\n          <div *ngFor=\"let row of gameBoard.getGameBoard(); index as rId\">\n            <div\n              *ngFor=\"let col of row; index as cId\"\n              [ngClass]=\"getClassForField([rId, cId])\"\n            >\n              <span> </span>\n            </div>\n          </div>\n        </div>\n      </td>\n      <td>&nbsp;&nbsp;</td>\n      <td>\n        <h1>Bouncing ball (description):</h1>\n        <p>Set ball into motion by pressing the start button</p>\n        <p>\n          The ball will stop automatically once it reaches its starting position\n        </p>\n        <hr />\n        <p>Change movement direction</p>\n        <table>\n          <tr>\n            <td>\n              <button type=\"button\" (click)=\"changeShift(1)\">&#x2196;</button>\n            </td>\n            <td>&nbsp;</td>\n            <td>\n              <button type=\"button\" (click)=\"changeShift(2)\">&#x2197;</button>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <button type=\"button\" (click)=\"changeShift(3)\">&#x2199;</button>\n            </td>\n            <td>&nbsp;</td>\n            <td>\n              <button type=\"button\" (click)=\"changeShift(4)\">&#x2198;</button>\n            </td>\n          </tr>\n        </table>\n        <br />\n        <hr />\n        <br />\n        <button\n          type=\"button\"\n          (click)=\"setStartingBallAtRandomPosition()\"\n          [disabled]=\"gameStarted\"\n        >\n          Set ball at random position\n        </button>\n        <br /><br />\n        <button\n          type=\"button\"\n          (click)=\"setBallIntoMotion()\"\n          [disabled]=\"gameStarted\"\n        >\n          Set ball into motion\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<router-outlet></router-outlet>\n","// tablica wymagana przez Karola\nconst board: string[][] = [\n    [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n    [\"X\", \"1\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n];\n\nexport default board;\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * python like randInt\n * returns random int from given range (incl-excl)\n * @param {number}  min - minimum (incl)\n * @param {number}  max - maximum (excl)\n * @returns {number} random value from a given range\n */\nfunction randInt(min: number, max?: number): number {\n\n    let result: number = 0;\n\n    for (let i = 0; i < 2; i++) {\n        if (arguments[i] < 0) {\n            throw new Error(\"range must not include negative numbers\");\n        }\n    }\n    if (arguments.length === 1) {\n        max = min;\n        min = 0;\n    }\n    // floats protection\n    min = Math.ceil(min);\n    // should always be true,\n    // but the stricter angular checker requires me to do that way\n    if (max) {\n        max = Math.floor(max);\n        result = Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    return result;\n}\n\nexport default randInt;\n","import board from \"./examInput\";\nimport Point from \"../point/point\";\nimport Ball from \"../point/ball\";\nimport Brick from \"../point/brick\";\n\nclass GameBoard {\n    private _gameBoard: Point[][] = [];\n    private _ball: Ball = new Ball(1, 1);\n\n    public constructor() {\n        this.initializeBoard();\n    }\n\n    // initialize board with required in task pattern\n    public initializeBoard(): void {\n        this._gameBoard = [];\n\n        for (let r = 0; r < board.length; r++) {\n            let row: Point[] = [];\n            for (let c = 0; c < board[r].length; c++) {\n                if (board[r][c] === \"X\") {\n                    row.push(new Brick(r, c));\n                } else if (board[r][c] === \"1\") {\n                    this._ball = new Ball(r, c);\n                    row.push(this._ball);\n                } else {\n                    row.push(new Point(r, c));\n                }\n            }\n            this._gameBoard.push(row);\n        }\n    }\n\n    public getGameBoard(): Point[][] {\n        return this._gameBoard;\n    }\n\n    public getBall(): Ball {\n        return this._ball;\n    }\n\n    public setObjAtBoard(obj: Point): void {\n        let [row, col] = obj.getPos();\n        if (obj instanceof Ball) {\n            this._ball = obj;\n        }\n        this._gameBoard[row][col] = obj;\n    }\n\n    public getContent(pos: number[]): Point {\n        let [row, col] = pos;\n        return this._gameBoard[row][col];\n    }\n\n    public getNCols(): number {\n        // all rows are of equal length\n        return this._gameBoard[0].length;\n    }\n\n    public getNRows(): number {\n        return this._gameBoard.length;\n    }\n}\n\nconst singelton = (function() {\n    let instance: GameBoard; \t// no initialization, so undefined\n\n    function init() {\n        return new GameBoard();\n    }\n\n    function getInstance(): GameBoard {\n        if (!Boolean(instance)) {\n            instance = init();\n        }\n        return instance;\n    }\n\n    return {\n        getGameBoardInstance: getInstance\n    }\n})();\n\nexport { GameBoard, singelton };\n","import Point from \"./point\";\n\nclass Ball extends Point {\n    public constructor(x: number, y: number) {\n        super(x, y);\n    }\n\n    public add(other: Point): Ball {\n        let newX: number = this.getX() + other.getX();\n        let newY: number = this.getY() + other.getY();\n        return new Ball(newX, newY);\n    }\n}\n\nexport default Ball;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}