{"version":3,"sources":["./src/app/point/brick.ts","./src/app/utils/betweenTwoNums.ts","./src/app/point/point.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/gameBoard/examInput.ts","./src/app/app.module.ts","./src/app/utils/randInt.ts","./src/app/gameBoard/gameBoard.ts","./src/app/point/ball.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import Point from \"./point\";\n\nclass Brick extends Point {\n    public constructor(x: number, y: number) {\n        super(x, y);\n    }\n}\n\nexport default Brick;\n","/**\n * tests is number is between other two numbers\n */\nfunction isBetween(testedNum: number,\n    lowerIncl: number, upperIncl: number): boolean {\n    return (testedNum >= lowerIncl) && (testedNum <= upperIncl);\n}\n\nexport default isBetween;\n","class Point {\n    private _x: number;\n    private _y: number;\n\n    public constructor(x: number, y: number) {\n        this._x = x;\n        this._y = y;\n    }\n\n    public getX(): number {\n        return this._x;\n    }\n\n    public setX(newX: number): void {\n        this._x = newX;\n    }\n\n    public getY(): number {\n        return this._y;\n    }\n\n    public setY(newY: number): void {\n        this._y = newY;\n    }\n\n    public getPos(): number[] {\n        return [this._x, this._y];\n    }\n\n    public equalPosition(other: Point): boolean {\n        return this._x === other._x && this._y === other._y;\n    }\n\n    add(other: Point): Point {\n        let newX: number = this.getX() + other.getX();\n        let newY: number = this.getY() + other.getY();\n        return new Point(newX, newY);\n    }\n}\n\nexport default Point;\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n// GameBoard imported only for better autocompletion\n// consider removing it after everything is done;\nimport { singelton, GameBoard } from './gameBoard/gameBoard';\nimport isBetween from './utils/betweenTwoNums';\nimport Point from \"./point/point\";\nimport Ball from \"./point/ball\";\nimport Brick from \"./point/brick\";\nimport randInt from \"./utils/randInt\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    public title: string = 'bouncing-ball';\n    public gameBoard: GameBoard = singelton.getGameBoardInstance();\n    public shift: Point = new Point(1, 1);\n    public initialBall: Ball = this.gameBoard.getBall();\n    public intervalId: any;\n    public shouldBallBeStopped: boolean = false;\n    public gameStarted: boolean = false;\n\n    public getClassForField(pos: number[]): string {\n        if (this.gameBoard.getContent(pos) instanceof Brick) {\n            return \"boarder\";\n        } else if (this.gameBoard.getContent(pos) instanceof Ball) {\n            return \"ball\";\n        } else {\n            return \"empty\";\n        }\n    }\n\n    private collisionOnAxis(pos: number[], axis: 'x' | 'y'): boolean {\n        if (axis === 'x') {\n            return !isBetween(pos[0], 1, this.gameBoard.getNRows() - 2);\n        } else {\n            return !isBetween(pos[1], 1, this.gameBoard.getNCols() - 2);\n        }\n    }\n\n    private collisionOnAnyAxis(pos: number[]): boolean {\n        return this.collisionOnAxis(pos, 'x') || this.collisionOnAxis(pos, 'y');\n    }\n\n    public changeShift(option: number): void {\n        switch (option) {\n            case 1:\n                this.shift = new Point(-1, -1);\n                break;\n            case 2:\n                this.shift = new Point(-1, 1);\n                break;\n            case 3:\n                this.shift = new Point(1, -1);\n                break;\n            default:\n                this.shift = new Point(1, 1);\n                break;\n        }\n    }\n\n    /**\n     * detects collisions of someBall position with the walls of gameBoard\n     * changes this.shift X and/or Y coordinate (negates it)\n     */\n    private changeShiftIfCollision(someBall: Ball): void {\n        if (this.collisionOnAxis(someBall.getPos(), 'x')) {\n            this.shift.setX(this.shift.getX() * -1);\n        }\n        if (this.collisionOnAxis(someBall.getPos(), 'y')) {\n            this.shift.setY(this.shift.getY() * -1);\n        }\n    }\n\n    private getBallAtWithItsXYRandom(): Ball {\n        let newX: number = randInt(1, this.gameBoard.getNRows() - 1);\n        let newY: number = randInt(1, this.gameBoard.getNCols() - 1);\n        return new Ball(newX, newY);\n    }\n\n    public setStartingBallAtRandomPosition(): void {\n        let curBall: Ball = this.gameBoard.getBall();\n        let newBall: Ball;\n        do {\n            newBall = this.getBallAtWithItsXYRandom()\n        } while (curBall.equalPosition(newBall))\n        this.gameBoard.setObjAtBoard(new Point(curBall.getX(), curBall.getY()));\n        this.gameBoard.setObjAtBoard(newBall);\n        this.initialBall = newBall;\n    }\n\n    private moveBallByOneField(): void {\n        let curBall: Ball = this.gameBoard.getBall();\n        let [bRow, bCol] = curBall.getPos();\n        let newBall: Ball; // where ball will be in the next move\n\n        do {\n            newBall = curBall.add(this.shift);\n            this.changeShiftIfCollision(newBall);\n        } while (this.collisionOnAnyAxis(newBall.getPos()))\n\n        this.gameBoard.setObjAtBoard(new Point(bRow, bCol));\n        this.gameBoard.setObjAtBoard(newBall);\n\n        this.shouldBallBeStopped = newBall.equalPosition(this.initialBall);\n    }\n\n    public initializeGameBoard(): void {\n        this.gameBoard.initializeBoard();\n    }\n\n    /**\n     * sets ball into motion\n     * sets this.internalId = to interval id from setInterval\n     * that it uses internally\n     */\n    public setBallIntoMotion(): void {\n        let intervalId = setInterval(() => {\n            this.gameStarted = true;\n            this.moveBallByOneField();\n            if (this.shouldBallBeStopped) {\n                this.stopTheBall();\n            }\n        }, 200);\n        this.intervalId = intervalId;\n    }\n\n    public stopTheBall(): void {\n        clearInterval(this.intervalId);\n    }\n\n    ngOnInit() {\n        this.initializeGameBoard();\n    }\n\n\n}\n","<div>\n  <table>\n    <tr>\n      <td>\n        <div class=\"gameboard\">\n          <div *ngFor=\"let row of gameBoard.getGameBoard(); index as rId\">\n            <div\n              *ngFor=\"let col of row; index as cId\"\n              [ngClass]=\"getClassForField([rId, cId])\"\n            >\n              <span> </span>\n            </div>\n          </div>\n        </div>\n      </td>\n      <td>&nbsp;&nbsp;</td>\n      <td>\n        <h1>Bouncing ball (description):</h1>\n        <p>Set ball into motion by pressing the start button</p>\n        <p>\n          The ball will stop automatically once it reaches its starting position\n        </p>\n        <hr />\n        <p>Change movement direction</p>\n        <table>\n          <tr>\n            <td>\n              <button type=\"button\" (click)=\"changeShift(1)\">&#x2196;</button>\n            </td>\n            <td>&nbsp;</td>\n            <td>\n              <button type=\"button\" (click)=\"changeShift(2)\">&#x2197;</button>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              <button type=\"button\" (click)=\"changeShift(3)\">&#x2199;</button>\n            </td>\n            <td>&nbsp;</td>\n            <td>\n              <button type=\"button\" (click)=\"changeShift(4)\">&#x2198;</button>\n            </td>\n          </tr>\n        </table>\n        <br />\n        <hr />\n        <br />\n        <button\n          type=\"button\"\n          (click)=\"setStartingBallAtRandomPosition()\"\n          [disabled]=\"gameStarted\"\n        >\n          Set ball at random position\n        </button>\n        <br /><br />\n        <button\n          type=\"button\"\n          (click)=\"setBallIntoMotion()\"\n          [disabled]=\"gameStarted\"\n        >\n          Set ball into motion\n        </button>\n      </td>\n    </tr>\n  </table>\n</div>\n\n<router-outlet></router-outlet>\n","// tablica wymagana przez Karola\nconst board: string[][] = [\n    [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n    [\"X\", \"1\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"0\", \"0\", \"0\", \"0\", \"0\", \"X\"],\n    [\"X\", \"X\", \"X\", \"X\", \"X\", \"X\", \"X\"],\n];\n\nexport default board;\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","/**\n * python like randInt\n * returns random int from given range (incl-excl)\n * @param {number}  min - minimum (incl)\n * @param {number}  max - maximum (excl)\n * @returns {number} random value from a given range\n */\nfunction randInt(min: number, max?: number): number {\n\n    let result: number = 0;\n\n    for (let i = 0; i < 2; i++) {\n        if (arguments[i] < 0) {\n            throw new Error(\"range must not include negative numbers\");\n        }\n    }\n    if (arguments.length === 1) {\n        max = min;\n        min = 0;\n    }\n    // floats protection\n    min = Math.ceil(min);\n    // should always be true,\n    // but the stricter angular checker requires me to do that way\n    if (max) {\n        max = Math.floor(max);\n        result = Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    return result;\n}\n\nexport default randInt;\n","import board from \"./examInput\";\nimport Point from \"../point/point\";\nimport Ball from \"../point/ball\";\nimport Brick from \"../point/brick\";\n\nclass GameBoard {\n    private _gameBoard: Point[][] = [];\n    private _ball: Ball = new Ball(1, 1);\n\n    public constructor() {\n        this.initializeBoard();\n    }\n\n    // initialize board with required in task pattern\n    public initializeBoard(): void {\n        this._gameBoard = [];\n\n        for (let r = 0; r < board.length; r++) {\n            let row: Point[] = [];\n            for (let c = 0; c < board[r].length; c++) {\n                if (board[r][c] === \"X\") {\n                    row.push(new Brick(r, c));\n                } else if (board[r][c] === \"1\") {\n                    this._ball = new Ball(r, c);\n                    row.push(this._ball);\n                } else {\n                    row.push(new Point(r, c));\n                }\n            }\n            this._gameBoard.push(row);\n        }\n    }\n\n    public getGameBoard(): Point[][] {\n        return this._gameBoard;\n    }\n\n    public getBall(): Ball {\n        return this._ball;\n    }\n\n    public setObjAtBoard(obj: Point): void {\n        let [row, col] = obj.getPos();\n        if (obj instanceof Ball) {\n            this._ball = obj;\n        }\n        this._gameBoard[row][col] = obj;\n    }\n\n    public getContent(pos: number[]): Point {\n        let [row, col] = pos;\n        return this._gameBoard[row][col];\n    }\n\n    public getNCols(): number {\n        // all rows are of equal length\n        return this._gameBoard[0].length;\n    }\n\n    public getNRows(): number {\n        return this._gameBoard.length;\n    }\n}\n\nconst singelton = (function() {\n    let instance: GameBoard; \t// no initialization, so undefined\n\n    function init() {\n        return new GameBoard();\n    }\n\n    function getInstance(): GameBoard {\n        if (!Boolean(instance)) {\n            instance = init();\n        }\n        return instance;\n    }\n\n    return {\n        getGameBoardInstance: getInstance\n    }\n})();\n\nexport { GameBoard, singelton };\n","import Point from \"./point\";\n\nclass Ball extends Point {\n    public constructor(x: number, y: number) {\n        super(x, y);\n    }\n\n    public add(other: Point): Ball {\n        let newX: number = this.getX() + other.getX();\n        let newY: number = this.getY() + other.getY();\n        return new Ball(newX, newY);\n    }\n}\n\nexport default Ball;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}